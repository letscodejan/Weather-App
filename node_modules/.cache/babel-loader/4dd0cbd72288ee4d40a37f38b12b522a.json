{"ast":null,"code":"var _jsxFileName = \"/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/Weather.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nfunction Weather() {\n  const [ready, setReady] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      city: response.data.name,\n      date: \"Wednesday, 14:00\",\n      temperature: response.data.main.temp,\n      description: response.dta.weather[0].description,\n      iconUrl: \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed\n    }); //setTemperature();\n\n    setReady(true);\n  }\n\n  if (ready) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"Enter a city...\",\n      className: \"form-control\",\n      autoFocus: \"on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      className: \"btn btn-primary w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, weatherData.city), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, weatherData.date), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, weatherData.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: weatherData.iconUrl,\n      alt: weatherData.description,\n      className: \"float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"Temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, Math.round(weatherData.temperature)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"Units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \"\\xB0C\"), \" | \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 39\n      }\n    }, \"\\xB0F\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Humidity: \", weatherData.humidity, \" %\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Wind: \", weatherData.wind, \" km/h\")))));\n  } else {\n    const apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let city = \"Edmonton\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/Weather.js"],"names":["React","useState","axios","Weather","ready","setReady","weatherData","setWeatherData","handleResponse","response","console","log","data","city","name","date","temperature","main","temp","description","dta","weather","iconUrl","humidity","wind","speed","Math","round","apiKey","apiUrl","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nfunction Weather() {\n  const [ready, setReady] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      city: response.data.name,\n      date: \"Wednesday, 14:00\",\n      temperature: response.data.main.temp,\n      description: response.dta.weather[0].description,\n      iconUrl: \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n    });\n\n    //setTemperature();\n\n    setReady(true);\n  }\n\n  if (ready) {\n    return (\n      <div className=\"Weather\">\n        <form>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city...\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary w-100\"\n              />\n            </div>\n          </div>\n        </form>\n\n        <h1>{weatherData.city}</h1>\n        <ul>\n          <li>{weatherData.date}</li>\n          <li className=\"text-capitalize\">{weatherData.description}</li>\n        </ul>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"clearfix\">\n              <img\n                src={weatherData.iconUrl}\n                alt={weatherData.description}\n                className=\"float-left\"\n              />\n\n              <div className=\"float-left\">\n                <span className=\"Temperature\">\n                  {Math.round(weatherData.temperature)}\n                </span>\n                <span className=\"Units\">\n                  <a href=\"\">°C</a> | <a href=\"\">°F</a>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <ul>\n              <li>Humidity: {weatherData.humidity} %</li>\n              <li>Wind: {weatherData.wind} km/h</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    const apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let city = \"Edmonton\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return \"Loading...\";\n  }\n}\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}