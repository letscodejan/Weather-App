{"ast":null,"code":"var _jsxFileName = \"/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/Weather.js\";\nimport React, { useState } from \"react\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nfunction Weather(props) {\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    //console.log(response.data);\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      iconUrl: \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed\n    });\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"Enter a city...\",\n      className: \"form-control\",\n      autoFocus: \"on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      className: \"btn btn-primary w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, weatherData.city), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedDate, {\n      date: weatherData.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, weatherData.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: weatherData.iconUrl,\n      alt: weatherData.description,\n      className: \"float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"Temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, Math.round(weatherData.temperature)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"Units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"\\xB0C | \\xB0F\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Humidity: \", weatherData.humidity, \" %\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Wind: \", weatherData.wind, \" km/h\")))));\n  } else {\n    const apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/Weather.js"],"names":["React","useState","FormattedDate","WeatherInfo","axios","Weather","props","weatherData","setWeatherData","ready","handleResponse","response","city","data","name","date","Date","dt","temperature","main","temp","description","weather","iconUrl","humidity","wind","speed","Math","round","apiKey","apiUrl","defaultCity","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nfunction Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  function handleResponse(response) {\n    //console.log(response.data);\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      iconUrl: \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n    });\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city...\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary w-100\"\n              />\n            </div>\n          </div>\n        </form>\n\n        <h1>{weatherData.city}</h1>\n        <ul>\n          <li>\n            <FormattedDate date={weatherData.date} />\n          </li>\n          <li className=\"text-capitalize\">{weatherData.description}</li>\n        </ul>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"clearfix\">\n              <img\n                src={weatherData.iconUrl}\n                alt={weatherData.description}\n                className=\"float-left\"\n              />\n\n              <div className=\"float-left\">\n                <span className=\"Temperature\">\n                  {Math.round(weatherData.temperature)}\n                </span>\n                <span className=\"Units\">°C | °F</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <ul>\n              <li>Humidity: {weatherData.humidity} %</li>\n              <li>Wind: {weatherData.wind} km/h</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    const apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return \"Loading...\";\n  }\n}\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}