{"ast":null,"code":"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\n\nfunction WeatherForecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState();\n\n  function handleForecastResponse(response) {\n    setLoaded(true);\n    console.log(response.data);\n  }\n\n  if (loaded) {\n    return \"loaded\";\n  } else {\n    let apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUnit = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=${apiUnit}`;\n    axios.get(apiUrl).then(handleForecastResponse);\n    return null;\n  }\n}\n\nexport default WeatherForecast;","map":{"version":3,"sources":["/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/WeatherForecast.js"],"names":["React","useState","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleForecastResponse","response","console","log","data","apiKey","apiUnit","apiUrl","city","get","then"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;;AACA,WAASQ,sBAAT,CAAgCC,QAAhC,EAA0C;AACxCJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD;;AAED,MAAIR,MAAJ,EAAY;AACV,WAAO,QAAP;AACD,GAFD,MAEO;AACL,QAAIS,MAAM,GAAG,kCAAb;AACA,QAAIC,OAAO,GAAG,QAAd;AACA,QAAIC,MAAM,GAAI,sDAAqDZ,KAAK,CAACa,IAAK,UAASH,MAAO,UAASC,OAAQ,EAA/G;AACAb,IAAAA,KAAK,CAACgB,GAAN,CAAUF,MAAV,EAAkBG,IAAlB,CAAuBV,sBAAvB;AAEA,WAAO,IAAP;AACD;AACF;;AACD,eAAeN,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./WeatherForecast.css\";\n\nfunction WeatherForecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState();\n  function handleForecastResponse(response) {\n    setLoaded(true);\n    console.log(response.data);\n  }\n\n  if (loaded) {\n    return \"loaded\";\n  } else {\n    let apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUnit = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=${apiUnit}`;\n    axios.get(apiUrl).then(handleForecastResponse);\n\n    return null;\n  }\n}\nexport default WeatherForecast;\n"]},"metadata":{},"sourceType":"module"}