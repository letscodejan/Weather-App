{"ast":null,"code":"var _jsxFileName = \"/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/Weather.js\";\nimport React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nfunction Weather(props) {\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    //console.log(response.data);\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed\n    });\n  }\n\n  function searchCity() {\n    const apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUnit = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${apiUnit}`;\n    axios.get(apiUrl).then(handleResponse);\n  } //Search City\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    searchCity();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  } //Geolocation\n\n\n  function RetrivePosition(position) {\n    const apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUnit = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${apiKey}&units=${apiUnit}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function getCurrentLocation(event) {\n    navigator.geolocation.getCurrentPosition(RetrivePosition);\n  }\n\n  function handleClick(event) {\n    event.preventDefault();\n    getCurrentLocation();\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"Enter a city...\",\n      className: \"form-control\",\n      autoFocus: \"on\",\n      onChange: handleCityChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SearchCityButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CurrentLocationButton col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      className: \"btn btn-outline-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-location-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), \"  \")))), /*#__PURE__*/React.createElement(WeatherInfo, {\n      data: weatherData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WeatherForecast, {\n      city: weatherData.city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    searchCity();\n    return \"Loading...USE REACT LOADER HERE\";\n  }\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/Weather.js"],"names":["React","useState","WeatherInfo","WeatherForecast","axios","Weather","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","data","name","date","Date","dt","temperature","main","temp","description","weather","icon","humidity","wind","speed","searchCity","apiKey","apiUnit","apiUrl","get","then","handleSubmit","event","preventDefault","handleCityChange","target","value","RetrivePosition","position","coords","latitude","longitude","getCurrentLocation","navigator","geolocation","getCurrentPosition","handleClick"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nfunction Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    //console.log(response.data);\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n    });\n  }\n\n  function searchCity() {\n    const apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUnit = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${apiUnit}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  //Search City\n  function handleSubmit(event) {\n    event.preventDefault();\n    searchCity();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  //Geolocation\n  function RetrivePosition(position) {\n    const apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUnit = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${apiKey}&units=${apiUnit}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function getCurrentLocation(event) {\n    navigator.geolocation.getCurrentPosition(RetrivePosition);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    getCurrentLocation();\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city...\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n                onChange={handleCityChange}\n              />\n            </div>\n            <div className=\"SearchCityButton\">\n              <button type=\"submit\" className=\"btn btn-outline-dark\">\n                <i class=\"fas fa-search\"></i>\n              </button>\n            </div>\n            <div className=\"CurrentLocationButton col-1\">\n              <button onClick={handleClick} className=\"btn btn-outline-light\">\n                <i className=\"fas fa-location-arrow\"></i>\n                {\"  \"}\n              </button>\n            </div>\n          </div>\n        </form>\n\n        <WeatherInfo data={weatherData} />\n        <WeatherForecast city={weatherData.city} />\n      </div>\n    );\n  } else {\n    searchCity();\n    return \"Loading...USE REACT LOADER HERE\";\n  }\n}\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}