{"ast":null,"code":"var _jsxFileName = \"/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/WeatherForecast.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\nimport \"./WeatherForecast.css\";\n\nfunction WeatherForecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function handleForecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    //console.log(forecast.list[0].main.temp);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"WeatherForecast row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WeatherForecastPreview, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    let apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUnit = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=${apiUnit}`;\n    axios.get(apiUrl).then(handleForecastResponse);\n    return null;\n  }\n}\n\nexport default WeatherForecast;","map":{"version":3,"sources":["/Users/janiceasumbrado/GitHub/react-weatherapp-finalproject/src/WeatherForecast.js"],"names":["React","useState","axios","WeatherForecastPreview","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleForecastResponse","response","data","apiKey","apiUnit","apiUrl","city","get","then"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA,OAAO,uBAAP;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;;AACA,WAASS,sBAAT,CAAgCC,QAAhC,EAA0C;AACxCF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAV,CAAX;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACV;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAPD,MAOO;AACL,QAAIO,MAAM,GAAG,kCAAb;AACA,QAAIC,OAAO,GAAG,QAAd;AACA,QAAIC,MAAM,GAAI,sDAAqDV,KAAK,CAACW,IAAK,UAASH,MAAO,UAASC,OAAQ,EAA/G;AACAZ,IAAAA,KAAK,CAACe,GAAN,CAAUF,MAAV,EAAkBG,IAAlB,CAAuBR,sBAAvB;AAEA,WAAO,IAAP;AACD;AACF;;AACD,eAAeN,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\n\nimport \"./WeatherForecast.css\";\n\nfunction WeatherForecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n  function handleForecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    //console.log(forecast.list[0].main.temp);\n    return (\n      <div className=\"WeatherForecast row\">\n        <WeatherForecastPreview />\n      </div>\n    );\n  } else {\n    let apiKey = \"6df68f5433f668287bfc545331edd9d1\";\n    let apiUnit = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=${apiUnit}`;\n    axios.get(apiUrl).then(handleForecastResponse);\n\n    return null;\n  }\n}\nexport default WeatherForecast;\n"]},"metadata":{},"sourceType":"module"}